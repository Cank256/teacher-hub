paths:
  /api/messages/conversations:
    get:
      tags:
        - Messages
      summary: Get user conversations
      description: |
        Retrieves all conversations for the authenticated user with pagination.
        Includes conversation metadata, participant information, and last message preview.
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number for pagination
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          description: Number of conversations per page
      responses:
        '200':
          description: Conversations retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Conversation'
                  pagination:
                    $ref: '#/components/schemas/PaginationResponse'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      tags:
        - Messages
      summary: Create a new conversation
      description: |
        Creates a new conversation with specified participants.
        Supports both direct (1-on-1) and group conversations.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - participantIds
              properties:
                participantIds:
                  type: array
                  items:
                    type: string
                    format: uuid
                  minItems: 1
                  description: Array of user IDs to include in the conversation
                  example: ["456e7890-e89b-12d3-a456-426614174000"]
                type:
                  type: string
                  enum: [direct, group]
                  default: direct
                  description: Type of conversation
            examples:
              direct_conversation:
                summary: Create direct conversation
                value:
                  participantIds: ["456e7890-e89b-12d3-a456-426614174000"]
                  type: "direct"
              group_conversation:
                summary: Create group conversation
                value:
                  participantIds: [
                    "456e7890-e89b-12d3-a456-426614174000",
                    "789e0123-e89b-12d3-a456-426614174000"
                  ]
                  type: "group"
      responses:
        '201':
          description: Conversation created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  conversation:
                    $ref: '#/components/schemas/Conversation'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/messages/conversations/{conversationId}/messages:
    get:
      tags:
        - Messages
      summary: Get messages in a conversation
      description: |
        Retrieves messages from a specific conversation with pagination.
        Messages are returned in chronological order by default.
      security:
        - bearerAuth: []
      parameters:
        - name: conversationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Unique identifier of the conversation
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number for pagination
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 50
          description: Number of messages per page
      responses:
        '200':
          description: Messages retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Message'
                  pagination:
                    $ref: '#/components/schemas/PaginationResponse'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Access denied to this conversation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Conversation not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/messages/send:
    post:
      tags:
        - Messages
      summary: Send a message
      description: |
        Sends a new message to a recipient or group. This is a REST backup to the WebSocket messaging system.
        For real-time messaging, use the WebSocket connection instead.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - content
              properties:
                content:
                  type: string
                  minLength: 1
                  maxLength: 5000
                  description: Message content
                  example: "Hello! I wanted to discuss the new curriculum changes."
                recipientId:
                  type: string
                  format: uuid
                  description: ID of the message recipient (for direct messages)
                groupId:
                  type: string
                  format: uuid
                  description: ID of the group (for group messages)
                type:
                  type: string
                  enum: [text, file, image]
                  default: text
                  description: Type of message
                attachments:
                  type: array
                  items:
                    $ref: '#/components/schemas/Attachment'
                  description: File attachments
            examples:
              direct_message:
                summary: Direct message
                value:
                  content: "Hi! How are your students responding to the new math curriculum?"
                  recipientId: "456e7890-e89b-12d3-a456-426614174000"
                  type: "text"
              group_message:
                summary: Group message
                value:
                  content: "Meeting reminder: Tomorrow at 3 PM in the staff room."
                  groupId: "789e0123-e89b-12d3-a456-426614174000"
                  type: "text"
      responses:
        '201':
          description: Message sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    $ref: '#/components/schemas/Message'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/messages/{messageId}/reply:
    post:
      tags:
        - Messages
      summary: Reply to a message
      description: |
        Sends a reply to an existing message, creating a threaded conversation.
        The reply is linked to the original message for context.
      security:
        - bearerAuth: []
      parameters:
        - name: messageId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Unique identifier of the message to reply to
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - content
              properties:
                content:
                  type: string
                  minLength: 1
                  maxLength: 5000
                  description: Reply content
                  example: "That's a great point! I've noticed similar results in my classroom."
                attachments:
                  type: array
                  items:
                    $ref: '#/components/schemas/Attachment'
                  description: File attachments for the reply
            examples:
              text_reply:
                summary: Text reply
                value:
                  content: "Thanks for sharing! I'll try implementing this approach next week."
              reply_with_attachment:
                summary: Reply with attachment
                value:
                  content: "Here's the document I mentioned earlier."
                  attachments:
                    - filename: "lesson_plan.pdf"
                      mimeType: "application/pdf"
                      size: 245760
                      url: "https://example.com/files/lesson_plan.pdf"
      responses:
        '201':
          description: Reply sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    $ref: '#/components/schemas/Message'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Original message not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/messages/conversations/{conversationId}/read:
    put:
      tags:
        - Messages
      summary: Mark messages as read
      description: |
        Marks specified messages in a conversation as read by the current user.
        This updates the read status and affects unread message counts.
      security:
        - bearerAuth: []
      parameters:
        - name: conversationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Unique identifier of the conversation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - messageIds
              properties:
                messageIds:
                  type: array
                  items:
                    type: string
                    format: uuid
                  minItems: 1
                  description: Array of message IDs to mark as read
                  example: [
                    "123e4567-e89b-12d3-a456-426614174000",
                    "456e7890-e89b-12d3-a456-426614174000"
                  ]
      responses:
        '200':
          description: Messages marked as read successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  markedCount:
                    type: integer
                    description: Number of messages marked as read
                    example: 2
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Conversation not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/messages/{messageId}:
    get:
      tags:
        - Messages
      summary: Get message by ID
      description: Retrieves a specific message by its unique identifier.
      security:
        - bearerAuth: []
      parameters:
        - name: messageId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Unique identifier of the message
      responses:
        '200':
          description: Message retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    $ref: '#/components/schemas/Message'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Message not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      tags:
        - Messages
      summary: Edit message
      description: |
        Edits an existing message. Only the message sender can edit their messages.
        Edited messages are marked with an edit timestamp.
      security:
        - bearerAuth: []
      parameters:
        - name: messageId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Unique identifier of the message
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - content
              properties:
                content:
                  type: string
                  minLength: 1
                  maxLength: 5000
                  description: Updated message content
                  example: "Updated: I've revised my thoughts on this approach."
      responses:
        '200':
          description: Message edited successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    $ref: '#/components/schemas/Message'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Not authorized to edit this message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Message not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      tags:
        - Messages
      summary: Delete message
      description: |
        Deletes a message. Only the message sender can delete their messages.
        Deleted messages are removed from the conversation.
      security:
        - bearerAuth: []
      parameters:
        - name: messageId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Unique identifier of the message
      responses:
        '200':
          description: Message deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Not authorized to delete this message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Message not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/messages/users/search:
    get:
      tags:
        - Messages
      summary: Search for users
      description: |
        Search for other users to start conversations with.
        Supports filtering by subjects, grade levels, regions, and verification status.
      security:
        - bearerAuth: []
      parameters:
        - name: q
          in: query
          schema:
            type: string
          description: Search query for user names and emails
          example: "john smith"
        - name: subjects
          in: query
          schema:
            type: string
          description: Comma-separated list of subjects to filter by
          example: "mathematics,science"
        - name: gradeLevels
          in: query
          schema:
            type: string
          description: Comma-separated list of grade levels to filter by
          example: "elementary,middle"
        - name: regions
          in: query
          schema:
            type: string
          description: Comma-separated list of regions to filter by
          example: "ontario,quebec"
        - name: verificationStatus
          in: query
          schema:
            type: string
            enum: [pending, verified, rejected]
          description: Filter by user verification status
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number for pagination
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          description: Number of users per page
      responses:
        '200':
          description: Users retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
                  pagination:
                    $ref: '#/components/schemas/PaginationResponse'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/messages/users/suggestions:
    get:
      tags:
        - Messages
      summary: Get user suggestions
      description: |
        Get personalized user suggestions for starting conversations.
        Based on shared subjects, communities, and interaction history.
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number for pagination
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 50
            default: 10
          description: Number of suggestions per page
      responses:
        '200':
          description: User suggestions retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      allOf:
                        - $ref: '#/components/schemas/User'
                        - type: object
                          properties:
                            suggestionReason:
                              type: string
                              description: Reason for the suggestion
                              example: "Teaches similar subjects"
                            commonInterests:
                              type: array
                              items:
                                type: string
                              description: Shared interests or subjects
                  pagination:
                    $ref: '#/components/schemas/PaginationResponse'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/messages/unread/count:
    get:
      tags:
        - Messages
      summary: Get unread message count
      description: Returns the total number of unread messages for the authenticated user.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Unread count retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    minimum: 0
                    description: Total number of unread messages
                    example: 5
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/messages/{messageId}/thread:
    get:
      tags:
        - Messages
      summary: Get message thread
      description: |
        Retrieves a message and all its replies in a threaded format.
        Useful for displaying conversation context and reply chains.
      security:
        - bearerAuth: []
      parameters:
        - name: messageId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Unique identifier of the root message
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number for pagination
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          description: Number of replies per page
      responses:
        '200':
          description: Message thread retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  rootMessage:
                    $ref: '#/components/schemas/Message'
                  replies:
                    type: array
                    items:
                      $ref: '#/components/schemas/Message'
                  pagination:
                    $ref: '#/components/schemas/PaginationResponse'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Message not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'