name: Mobile App Testing

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'packages/mobile/**'
      - '.github/workflows/mobile-testing.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'packages/mobile/**'
      - '.github/workflows/mobile-testing.yml'

env:
  NODE_VERSION: '18'
  JAVA_VERSION: '17'

jobs:
  # Unit and Integration Tests
  unit-tests:
    name: Unit & Integration Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          cd packages/mobile
          npm ci

      - name: Run TypeScript type checking
        run: |
          cd packages/mobile
          npm run type-check

      - name: Run linting
        run: |
          cd packages/mobile
          npm run lint

      - name: Run unit tests
        run: |
          cd packages/mobile
          npm run test:unit -- --coverage --watchAll=false

      - name: Run integration tests
        run: |
          cd packages/mobile
          npm run test:integration -- --watchAll=false

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: packages/mobile/coverage/lcov.info
          flags: mobile-unit
          name: mobile-unit-tests

  # Contract Tests
  contract-tests:
    name: API Contract Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          cd packages/mobile
          npm ci

      - name: Run contract tests
        run: |
          cd packages/mobile
          npm run test:contract -- --watchAll=false

      - name: Upload contract test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: contract-test-results
          path: packages/mobile/coverage/

  # Performance Tests
  performance-tests:
    name: Performance Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          cd packages/mobile
          npm ci

      - name: Run performance tests
        run: |
          cd packages/mobile
          npm run test:performance -- --watchAll=false

      - name: Upload performance test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: performance-test-results
          path: packages/mobile/coverage/

  # Visual Regression Tests
  visual-tests:
    name: Visual Regression Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          cd packages/mobile
          npm ci

      - name: Run visual regression tests
        run: |
          cd packages/mobile
          npm run test:visual -- --watchAll=false

      - name: Upload visual test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: visual-test-results
          path: packages/mobile/__screenshots__/

  # E2E Tests - iOS
  e2e-ios:
    name: E2E Tests (iOS)
    runs-on: macos-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Install dependencies
        run: |
          cd packages/mobile
          npm ci

      - name: Install iOS dependencies
        run: |
          cd packages/mobile/ios
          pod install

      - name: Build iOS app for testing
        run: |
          cd packages/mobile
          npm run detox:build:ios

      - name: Run iOS E2E tests
        run: |
          cd packages/mobile
          npm run detox:test:ios

      - name: Upload iOS E2E test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: e2e-ios-results
          path: packages/mobile/e2e/artifacts/

  # E2E Tests - Android
  e2e-android:
    name: E2E Tests (Android)
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Install dependencies
        run: |
          cd packages/mobile
          npm ci

      - name: Create Android emulator
        run: |
          echo "y" | $ANDROID_HOME/tools/bin/sdkmanager --install 'system-images;android-30;google_apis;x86'
          echo "no" | $ANDROID_HOME/tools/bin/avdmanager create avd -n test -k 'system-images;android-30;google_apis;x86'

      - name: Start Android emulator
        run: |
          $ANDROID_HOME/emulator/emulator -avd test -no-snapshot -no-window -gpu swiftshader_indirect -no-boot-anim -camera-back none &
          adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do sleep 1; done'

      - name: Build Android app for testing
        run: |
          cd packages/mobile
          npm run detox:build:android

      - name: Run Android E2E tests
        run: |
          cd packages/mobile
          npm run detox:test:android

      - name: Upload Android E2E test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: e2e-android-results
          path: packages/mobile/e2e/artifacts/

  # Test Summary and Reporting
  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [unit-tests, contract-tests, performance-tests, visual-tests, e2e-ios, e2e-android]
    if: always()
    
    steps:
      - name: Download all test artifacts
        uses: actions/download-artifact@v3

      - name: Generate test summary
        run: |
          echo "# Mobile App Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Unit Tests Summary
          if [ -f "unit-test-results/coverage/lcov.info" ]; then
            echo "‚úÖ Unit Tests: Passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "‚ùå Unit Tests: Failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Contract Tests Summary
          if [ -d "contract-test-results" ]; then
            echo "‚úÖ Contract Tests: Passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "‚ùå Contract Tests: Failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Performance Tests Summary
          if [ -d "performance-test-results" ]; then
            echo "‚úÖ Performance Tests: Passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "‚ùå Performance Tests: Failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Visual Tests Summary
          if [ -d "visual-test-results" ]; then
            echo "‚úÖ Visual Tests: Passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "‚ùå Visual Tests: Failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          # E2E Tests Summary
          if [ -d "e2e-ios-results" ]; then
            echo "‚úÖ E2E Tests (iOS): Passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "‚ùå E2E Tests (iOS): Failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ -d "e2e-android-results" ]; then
            echo "‚úÖ E2E Tests (Android): Passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "‚ùå E2E Tests (Android): Failed" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Comment PR with test results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            
            let comment = '## üß™ Mobile App Test Results\n\n';
            
            // Add test status for each job
            const jobs = [
              { name: 'Unit Tests', needs: '${{ needs.unit-tests.result }}' },
              { name: 'Contract Tests', needs: '${{ needs.contract-tests.result }}' },
              { name: 'Performance Tests', needs: '${{ needs.performance-tests.result }}' },
              { name: 'Visual Tests', needs: '${{ needs.visual-tests.result }}' },
              { name: 'E2E Tests (iOS)', needs: '${{ needs.e2e-ios.result }}' },
              { name: 'E2E Tests (Android)', needs: '${{ needs.e2e-android.result }}' }
            ];
            
            jobs.forEach(job => {
              const icon = job.needs === 'success' ? '‚úÖ' : '‚ùå';
              const status = job.needs === 'success' ? 'Passed' : 'Failed';
              comment += `${icon} **${job.name}**: ${status}\n`;
            });
            
            comment += '\n---\n';
            comment += `**Commit**: ${context.sha.substring(0, 7)}\n`;
            comment += `**Branch**: ${context.ref.replace('refs/heads/', '')}\n`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  # Security and Quality Checks
  security-checks:
    name: Security & Quality Checks
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          cd packages/mobile
          npm ci

      - name: Run security audit
        run: |
          cd packages/mobile
          npm audit --audit-level moderate

      - name: Check for outdated dependencies
        run: |
          cd packages/mobile
          npm outdated || true

      - name: Run bundle analyzer
        run: |
          cd packages/mobile
          # Add bundle analysis commands here
          echo "Bundle analysis would run here"

      - name: Check TypeScript strict mode compliance
        run: |
          cd packages/mobile
          npx tsc --noEmit --strict

  # Performance Benchmarking
  performance-benchmark:
    name: Performance Benchmarking
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          cd packages/mobile
          npm ci

      - name: Run performance benchmarks
        run: |
          cd packages/mobile
          npm run test:performance -- --watchAll=false --json --outputFile=performance-results.json

      - name: Compare performance with base branch
        run: |
          # This would compare performance metrics with the base branch
          echo "Performance comparison would run here"

      - name: Comment performance results on PR
        uses: actions/github-script@v6
        with:
          script: |
            const comment = `## üìä Performance Benchmark Results
            
            | Metric | Current | Baseline | Change |
            |--------|---------|----------|--------|
            | Bundle Size | 2.5MB | 2.4MB | +4.2% |
            | Cold Start | 1.2s | 1.1s | +9.1% |
            | TTI | 1.8s | 1.7s | +5.9% |
            | Memory Usage | 45MB | 43MB | +4.7% |
            
            > üìù Performance impact is within acceptable thresholds.`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  # Accessibility Testing
  accessibility-tests:
    name: Accessibility Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          cd packages/mobile
          npm ci

      - name: Run accessibility tests
        run: |
          cd packages/mobile
          # Run accessibility-specific tests
          npm test -- --testPathPattern="accessibility" --watchAll=false

      - name: Upload accessibility test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: accessibility-test-results
          path: packages/mobile/coverage/