# Production Docker Compose Configuration
# This file overrides settings for production deployment

version: '3.8'

services:
  postgres:
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-teacher_hub_prod}
      POSTGRES_USER: ${POSTGRES_USER:-teacher_hub_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
    restart: always
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'

  redis:
    restart: always
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'

  elasticsearch:
    environment:
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    volumes:
      - elasticsearch_prod_data:/usr/share/elasticsearch/data
    restart: always
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'

  backend:
    environment:
      NODE_ENV: production
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: ${REDIS_URL}
      ELASTICSEARCH_URL: ${ELASTICSEARCH_URL}
      JWT_SECRET: ${JWT_SECRET}
      YOUTUBE_API_KEY: ${YOUTUBE_API_KEY}
      YOUTUBE_CLIENT_ID: ${YOUTUBE_CLIENT_ID}
      YOUTUBE_CLIENT_SECRET: ${YOUTUBE_CLIENT_SECRET}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      S3_BUCKET_NAME: ${S3_BUCKET_NAME}
      CLAMAV_HOST: clamav
      ENABLE_VIRUS_SCANNING: "true"
      ENABLE_CONTENT_SCANNING: "true"
      SENTRY_DSN: ${SENTRY_DSN}
      LOG_LEVEL: info
      PORT: 3001
    command: npm start
    restart: always
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
      replicas: 2

  web:
    environment:
      VITE_API_URL: ${API_URL:-https://api.teacherhub.ug}
      VITE_WS_URL: ${WS_URL:-wss://api.teacherhub.ug}
      NODE_ENV: production
    command: npm run preview
    restart: always
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'

  # Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: teacher-hub-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - web
    networks:
      - teacher-hub-network
    restart: always

volumes:
  postgres_prod_data:
  elasticsearch_prod_data: